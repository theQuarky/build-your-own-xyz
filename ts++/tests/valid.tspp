// Function declaration with multiple parameters and return type
function calculateArea(width: float, height: float): float {
    return width * height;
}

// Variable declarations with different types
let count: int = 42;
const PI: float = 3.14159;
let message: string = "Hello, World!";
let isActive: boolean = true;

// Complex arithmetic expressions
let result: float = (PI * count) + (50.0 / 2.0);
result *= 2;
result++;

// Nested if statements with blocks
function processValue(x: int): int {
    if (x > 0) {
        if (x < 100) {
            return x * 2;
        } else {
            return x;
        }
    } else {
        return -x;
    }
}

// Function with multiple parameters and complex logic
function computeStats(values: float, threshold: float): float {
    let sum: float = 0.0;
    let count: int = 0;
    
    if (values > threshold) {
        sum = values * 2.0;
        count = count + 1;
    } else {
        sum = values / 2.0;
    }
    
    return sum;
}

// Bitwise operations and compound assignments
let flags: int = 0;
flags |= 1;
flags &= 3;
flags ^= 2;
flags = flags << 1;
flags = flags >> 1;

// Boolean logic and comparison operations
let valid: boolean = true && !false;
let check: boolean = (count >= 0) && (PI <= 4.0);

// Function call with arithmetic expression
let area: float = calculateArea(10.0, 20.0);

// String assignments and concatenation example (if supported)
let name: string = "Alice";
let greeting: string = "Welcome, ";
let fullMessage: string = greeting;